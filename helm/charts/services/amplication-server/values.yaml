name: amplication-server

deployment:
  replicaCount: 1
  volume:
    name: amplication-server-artifacts-data
    path: /artifacts
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  podAnnotations: {}
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  image:
    pullPolicy: Always
    repository: 407256539111.dkr.ecr.us-east-1.amazonaws.com/amplication-prod-server
    tag: 0.0.7
    imagePullSecrets: []

service:
  type: ClusterIP
  port: 
    target: 3000
  protocol: TCP
ingress:
  enabled: true
  hostname: server.amplication-dev.com

pvc:
  storageLimit: 5Gi
  storageRequest: 1Gi

# Postgresql Server
postgres:
  install: false
  postgresqlUsername: postgres
  db: amplication
  fullnameOverride: postgresql
  postgresql:
    image: groundnuty/k8s-wait-for:v1.3
    imagePullPolicy: Always
    primary:
      podLabels: { name: "postgres" }

cp-helm-charts:
  cp-kafka:
    enabled: true
    prometheus:
      jmx:
        enabled: true
    podAnnotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
    resources:
      limits:
        cpu: 2
        memory: 4Gi
      requests:
        cpu: 2
        memory: 4Gi
    brokers: 1
    persistence:
      enabled: true
      size: 100Gi
    configurationOverrides:
      offsets.topic.replication.factor: "1"
    heapOptions: "-Xms2g -Xmx2g"
  cp-zookeeper:
    enabled: true  
  cp-schema-registry:
    enabled: false
  cp-kafka-rest:
    enabled: false
  cp-kafka-connect:
    enabled: false
  cp-control-center:
    enabled: false
  cp-kspl-server:
    enabled: false