// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.Boolean) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Boolean {}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/boolean.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.CreatedAt) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreatedAt {}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/createdAt.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.DateTime) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DateTime {
  timeZone: \\"localTime\\" | \\"serverTime\\";
  dateOnly: boolean;
}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/dateTime.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.DecimalNumber) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface DecimalNumber {
  /**
   * The minimum value
   */
  minimumValue: number;
  /**
   * The maximum value
   */
  maximumValue: number;
  /**
   * The number of digits to the right of the decimal point
   */
  precision: number;
}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/decimalNumber.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.Email) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Email {}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/email.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.GeographicLocation) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GeographicAddress {}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/geographicLocation.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.Id) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Id {}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/id.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.Json) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Json {}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/json.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.Lookup) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type RelatedEntity = string;
export type RelatedField = string;

export interface Lookup {
  relatedEntityId: RelatedEntity;
  allowMultipleSelection: boolean;
  relatedFieldId: RelatedField;
}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/lookup.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.MultiLineText) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MultiLineText {
  /**
   * The maximum length of the field
   */
  maxLength: number;
}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/multiLineText.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.MultiSelectOptionSet) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MultiSelectOptionSet {
  options: [
    {
      label: string;
      value: string;
    },
    ...{
      label: string;
      value: string;
    }[]
  ];
}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/multiSelectOptionSet.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.OptionSet) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface OptionSet {
  options: [
    {
      label: string;
      value: string;
    },
    ...{
      label: string;
      value: string;
    }[]
  ];
}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/optionSet.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.Password) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Password {}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/password.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.Roles) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Roles {}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/roles.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.SingleLineText) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface SingleLineText {
  /**
   * The maximum length of the field
   */
  maxLength: number;
}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/singleLineText.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.UpdatedAt) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface UpdatedAt {}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/updatedAt.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.Username) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface Username {}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/username.ts",
}
`;

exports[`Testing the generation of new type getSchemaForDataType(EnumDataType.WholeNumber) 1`] = `
Object {
  "code": "/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface WholeNumber {
  /**
   * The minimum value
   */
  minimumValue: number;
  /**
   * The maximum value
   */
  maximumValue: number;
}
",
  "path": "/Users/ofekgabay/Documents/git/amplication/packages/amplication-data/src/types/wholeNumber.ts",
}
`;
